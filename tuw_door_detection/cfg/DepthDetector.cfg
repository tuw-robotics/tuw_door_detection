#! /usr/bin/env python

PACKAGE = 'tuw_door_detection'
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

mode_enum = gen.enum([gen.const("Stop", int_t, 0, "A small constant"),
                      gen.const("Demo", int_t, 1, "A medium constant"),
                      gen.const("Wanderer", int_t, 2, "A medium constant"),
                      gen.const("Wanderer2", int_t, 3, "A large constant"),
                      gen.const("WallFollowing", int_t, 4, "A medium constant"),
                      gen.const("WallFollowing2", int_t, 5, "A large constant"),
                      gen.const("GoTo", int_t, 6, "A medium constant"),
                      gen.const("GoTo2", int_t, 7, "A large constant")],
                     "An enum select an operation mode")
gen.add("plot_data", bool_t, 0, "", False)
gen.add("mode", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 7, edit_method=mode_enum)
gen.add("map_pix_x", int_t, 0, "map size in pixel", 800, 10, 2000)
gen.add("map_pix_y", int_t, 0, "map size in pixel", 800, 10, 2000)
gen.add("map_max_x", double_t, 0, "map size in meter", 5, -10, 10)
gen.add("map_max_y", double_t, 0, "map size in meter", 5, -10, 10)
gen.add("map_min_x", double_t, 0, "map size in meter", -5, -10, 10)
gen.add("map_min_y", double_t, 0, "map size in meter", -5, -10, 10)
gen.add("map_grid_x", double_t, 0, "grid size in meter", 1, 0, 10)
gen.add("map_grid_y", double_t, 0, "grid size in meter", 1, 0, 10)
gen.add("map_rotation", double_t, 0, "map size in meter", 0, -3.14, 3.14)
gen.add("contour_cut_thresh", double_t, 0,
        "threshold in depth detector (deviation in depth higher than the threshold -> create new contour)", 0.25, 0,
        1.0)

gen.add("min_door_len", double_t, 0, "the minimum length a door segment must have", 0.4, 0, 1.0)
gen.add("max_door_len", double_t, 0, "the maximum length a door segment must have", 1.1, 0.2, 2.0)
gen.add("consecutive", int_t, 0, "number of consecutive frames", 1, 1, 50)

exit(gen.generate(PACKAGE, "tuw_door_detection", "DepthDetector"))
