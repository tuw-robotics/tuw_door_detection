<launch>
	
	<!-- used for simplemap construction, once the map is constructed it can be reused as long as it does not change -->
	<arg name="launch_ros_map_server" default="true"/>
	<arg name="launch_mrpt_map_server" default="true"/>
	<arg name="launch_rosbag" default="true"/>
	<arg name="launch_door_detector" default="true"/>
	<arg name="record_rawlog" default="true"/>
	<arg name="launch_object_publisher" default="true"/>
	<arg name="laser_scan" default="/r0/laser0/scan/raw"/>
	
	<arg name="world_frame" default="r0/base_link"/>
	<arg name="camera_frame" default="r0/realsense"/>
	<!-- publisher topic name for CObservationObjects, rawlog record listens to these objects and creates a rawlog file -->
	<arg name="bearing_topic_name" default="/object_observation"/>
	<!-- used by rosbag play -->
	<arg name="bag_file" default="$(find tuw_door_detection)/bags/lnov3.bag"/>
	<arg name="map_file"
		 default="$(find tuw_door_detection)/config/maps/roblab_all_rooms/refined/mapped_roblab_rooms.yaml"/>
	<arg name="use_robot_perspective" default="false"/>
	<arg name="robot_name" default="r0"/>
	<arg name="skip" default="0"/>
	<!-- tuw_msgs::ObjectDetection gets converted to mrpt_msgs::CObservationObject -->
	<arg name="object_detections_topic_name" default="/object_detections"/>
	<!-- prints more information on the screen, slow don't use in a live setting -->
	<arg name="debug_mode" default="false"/>
	<!-- used for door simulation in a test scenario -->
	<arg name="contour_filtering" default="false"/>
	<!-- threshold for door simulation filtering based on the laser range contour -->
	<arg name="contour_offset" default="0.5"/>
	<arg name="bag_delay" default="4"/>
	
	<group if="$(arg launch_object_publisher)">
		<param name="robot_perspective" type="bool" value="$(arg use_robot_perspective)"/>
		<param name="package_dir" type="str" value="$(find tuw_object_publisher)"/>
		<param name="debug" type="bool" value="$(arg debug_mode)"/>
		
		<rosparam command="load" file="$(find tuw_object_publisher)/launch/config.yaml"/>
		<node name="object_publisher_node" pkg="tuw_object_publisher" type="object_publisher_node" output="screen">
		</node>
	</group>
	
	<group if="$(arg use_robot_perspective)">
		<node pkg="rosbag" type="play" name="player" output="screen"
			  args="--clock -d $(arg bag_delay) $(arg bag_file)"/>
	</group>
	
	<group if="$(arg launch_door_detector)">
		<group if="$(arg launch_rosbag)">
			<rosparam param="use_sim_time" subst_value="True"/>
			<node pkg="rosbag" type="play" name="player" output="screen"
				  args="--clock -d $(arg bag_delay) $(arg bag_file)"/>
			
			<node pkg="rviz" type="rviz" name="rviz" output="screen" args="-d $(find tuw_door_detection)/config/rviz/r0_with_localization.rviz"/>
		</group>
		
		<group if="$(arg launch_ros_map_server)">
			<node pkg="map_server" type="map_server" name="map_server" output="screen"
				  args="$(arg map_file)" />
		</group>
		
		<!-- if no bag file is played assume live settings with predefined calibration -->
		<node name="door_detector_node" pkg="tuw_door_detection" type="door_detector_node" output="screen">
			<param name="mode" value="depth"/>
			<param name="publisher_topic" value="$(arg object_detections_topic_name)"/>
			<param name="debug" value="$(arg debug_mode)"/>
			<param name="internal_mode" value="contour"/>
			<param name="camera_source_frame" value="$(arg camera_frame)"/>
			<param name="laser_source_frame" value="r0/laser0"/>
			<param name="world_frame" value="$(arg world_frame)"/>
			<param name="mapped_doors_pub_topic" value="/doors_mapped"/>
			<remap from="scan" to="$(arg laser_scan)"/>
			<remap from="image_rgb" to="$(arg camera_frame)/color/image_raw"/>
			<remap from="image_depth" to="$(arg camera_frame)/depth/image_rect_raw"/>
			<remap from="camera_info_rgb" to="$(arg camera_frame)/color/camera_info"/>
			<remap from="camera_info_depth" to="$(arg camera_frame)/depth/camera_info"/>
		</node>
	</group>
	
	<!-- converts tuw_object_detection msgs to mrpt objects -->
	<node pkg="mrpt_object_converter" type="mrpt_object_converter_node" name="mrpt_object_converter_node"
		  output="screen">
		
		<param name="frame_id"
			   value="$(arg robot_name)/laser0"/> <!-- assume that the bearings are stored in robot space (as seen from robot) -->
		<param name="publisher_topic_name" value="$(arg bearing_topic_name)"/>
		<param name="subscriber_topic_name" value="$(arg object_detections_topic_name)"/>
		<param name="debug" type="bool" value="$(arg debug_mode)"/>
		<param name="contour_filtering" value="$(arg contour_filtering)"/>
		<param name="contour_offset" value="$(arg contour_offset)"/>
		<param name="world_frame" value="map"/>
		<param name="target_frame" value="$(arg robot_name)/laser0"/>
		<remap from="scan" to="$(arg robot_name)/laser0/scan/raw"/>
	
	</node>
	
	<group if="$(arg launch_mrpt_map_server)">
		
		<node pkg="mrpt_map" type="mrpt_map_creator_node" name="mrpt_map_creator_node" output="screen">
			<param name="frame_id" value="map"/>
			<param name="frequency" value="1"/>
			<!--<param name="ini_file" value="$(find mrpt_map)/tutorial/map.ini"/>-->
			<param name="simplemap_file" value="$(find mrpt_map)/tutorial/mapped_roblab_rooms.multimetricmap"/>
			<param name="bitmap_file" value="$(find mrpt_map)/tutorial/mapped_roblab_rooms.bmp"/>
			<param name="ini_file" value="$(find mrpt_map)/tutorial/mapped_roblab_rooms.ini"/>
			<param name="load_map" type="bool" value="true"/>
			<param name="update_map" type="bool" value="true"/>
			<param name="publish_bearings" type="bool" value="true"/>
			<param name="insert_as_simplemap" type="bool" value="false"/>
			<param name="base_frame_id" value="map"/>
			<param name="debug" value="$(arg debug_mode)"/>
			<remap from="bearings" to="$(arg bearing_topic_name)"/>
		</node>
	
	</group>
	
	<group if="$(arg record_rawlog)">
		
		<node pkg="mrpt_rawlog" type="rawlog_record_node" name="rawlog" output="screen">
			<remap from="odom" to="$(arg robot_name)/aria/odom"/>
			<remap from="scan" to="$(arg robot_name)/laser0/scan"/>
			<remap from="objects" to="$(arg bearing_topic_name)"/>
			<param name="base_frame_id" value="$(arg robot_name)/base_link"/>
			<param name="raw_log_folder" value="$(find mrpt_map)/tutorial"/>
			<param name="record_range_scan" value="true"/>
			<param name="record_bearing_range" value="false"/>
			<param name="record_object_observation" value="true"/>
			<param name="record_beacon_range" value="false"/>
			<param name="rate" value="45"/>
			<param name="debug" value="$(arg debug_mode)"/>
			<param name="ignore_timestamp_difference" value="true"/>
		</node>
	
	</group>

</launch>
